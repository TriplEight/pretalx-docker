volumes:
  pretalx-public:
  pretalx-data:
  pretalx-postgres:
  pretalx-redis:

networks:
  data:


x-default: &default
  networks:
    - data
  restart: unless-stopped

x-healthcheck: &healthcheck
  start_period: 10s
  interval: 30s
  retries: 5
  timeout: 3s

x-pretalx: &pretalx
  <<: *default
  image: ${PRETALX_IMAGE}:${PRETALX_TAG}
  volumes:
    - pretalx-data:/data
    - pretalx-public:/public
  env_file:
    - .env

x-pretalx-depends-on: &pretalx-depends-on
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
    migrations:
      condition: service_completed_successfully

services:

  web:
    <<: *default
    image: nginx:alpine
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - pretalx-public:/public
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:80 | grep -q 200"]
      <<: *healthcheck

  app:
    <<: [*pretalx, *pretalx-depends-on]
    command: gunicorn
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:8080 | grep -q 200"]
      <<: *healthcheck

  worker:
    <<: [*pretalx, *pretalx-depends-on]
    command: celery
    healthcheck:
      test: ["CMD-SHELL", "pgrep celery"]
      <<: *healthcheck

  cron:
    <<: [*pretalx, *pretalx-depends-on]
    command: cron
    user: root
    init: true
    healthcheck:
      test: ["CMD-SHELL", "pgrep cron"]
      <<: *healthcheck

  migrations:
    <<: *pretalx
    command: migrate
    restart: "no"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  postgres:
    <<: *default
    image: postgres:15-alpine
    volumes:
      - pretalx-postgres:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s

  redis:
    <<: *default
    image: redis:alpine
    command: --save 60 1 --loglevel warning
    volumes:
      - pretalx-redis:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      <<: *healthcheck
